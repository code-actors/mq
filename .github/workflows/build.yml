name: Build, Test, and Publish Package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Detect test projects
        id: detect-tests
        shell: bash
        run: |
          if grep -rl "<IsTestProject>true" --include "*.csproj" . >/dev/null; then
            echo "has-tests=true" >> "$GITHUB_OUTPUT"
          elif grep -rl "<PackageReference Include=\"Microsoft.NET.Test.Sdk\"" --include "*.csproj" . >/dev/null; then
            echo "has-tests=true" >> "$GITHUB_OUTPUT"
          else
            echo "has-tests=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Test
        if: steps.detect-tests.outputs.has-tests == 'true'
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Skip tests (no test projects found)
        if: steps.detect-tests.outputs.has-tests != 'true'
        run: echo "No test projects found. Skipping tests."

      - name: Pack NuGet package
        run: dotnet pack src/MessageQueue.Core/MessageQueue.Core.csproj --configuration Release --no-build --output ./artifacts -p:ContinuousIntegrationBuild=true

      - name: Upload NuGet artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: artifacts/*.nupkg

      - name: Publish NuGet package
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
